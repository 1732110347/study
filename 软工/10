10.1   面向对象分析的基本过程
首先，分析陈述用户需求的文件。
然后，系统分析员应该深入理解用户需求，抽象出目标系统的本质属性，并用模型准确地表示出来。

 需求分析是软件定义时期的最后一个阶段，它的基本任务是准确地回答“系统必须做什么”这个问题。


3.1 需求分析的任务


虽然功能需求是对软件系统的一项基本需求，但却并不是唯一的需求。通常对软件系统有下述几方面的综合要求。

功能需求
性能需求
可靠性和可用性需求
出错处理需求
接口需求
约束
逆向需求
将来可能提出的要求

 面向对象建模得到的模型包含系统的3个要素，即静态结构(对象模型)、交互次序(动态模型)和数据变换(功能模型)。解决的问题不同，这3个子模型的重要程度也不同。

复杂问题（大型系统）的对象模型通常由下述5个层次组成：

主题层
是指导读者理解大型、复杂模型的一种机制。也就是说，通过划分主题把一个大型、复杂的对象模型分解成几个不同的概念范畴。


10.2   需求陈述

应该描述用户的需求而不是提出解决问题的方法。
应该指出哪些是系统必要的性质，哪些是任选的性质。
应该避免对设计策略施加过多的约束，也不要描述系统的内部结构，因为这样做将限制实现的灵活性。
对系统性能及系统与外界环境交互协议进行描述。
对采用的软件工程标准、模块构造准则、将来可能做的扩充以及可维护性要求等方面进行描述。

10.3   建立对象模型
对象模型通常有5个层次。典型的工作步骤是：
首先确定对象类和关联，对于大型复杂问题还要进一步划分出若干个主题；
然后给类和关联增添属性，以进一步描述它们；
接下来利用适当的继承关系进一步合并和组织类。
       而对类中操作的最后确定，则需等到建立了动态模型和功能模型之后，因为这两个子模型更准确地描述了对类中提供的服务的需求。

10.3.1. 确定类与对象
10.3.3.划分主题

10.3.4.确定属性

10.3.5.识别继承关系


 10.4   建立动态模型
第一步，是编写典型交互行为的脚本。
第二步，从脚本中提取出事件，确定触发每个事件的动作对象以及接受事件的目标对象。
第三步，排列事件发生的次序，确定每个对象可能有的状态及状态间的转换关系，并用状态图描绘它们。
最后，比较各个对象的状态图，检查它们之间的一致性，确保事件之间的匹配。

10.4.1.编写脚本
10.4.2. 设想用户界面
10.4.3. 画事件跟踪图
1.确定事件
2.画出事件跟踪图

10.4.4. 画状态图
状态图描绘事件与对象状态的关系。当对象接受了一个事件以后，它的下个状态取决于当前状态及所接受的事件。由事件引起的状态改变称为“转换”。

通常，用一张状态图描绘一类对象的行为，它确定了由事件序列引出的状态序列。


 10.5   建立功能模型



10.6   定义服务


       